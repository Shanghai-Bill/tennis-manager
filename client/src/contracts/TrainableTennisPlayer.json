{
  "contractName": "TrainableTennisPlayer",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "conditionCostToTrain",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "attributeGainOnTrain",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "xpCostToTrain",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "xpCostToRest",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_xp",
          "type": "uint256"
        },
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_age",
          "type": "uint8"
        },
        {
          "name": "_height",
          "type": "uint8"
        },
        {
          "name": "_condition",
          "type": "uint8"
        },
        {
          "name": "_agility",
          "type": "uint8"
        },
        {
          "name": "_power",
          "type": "uint8"
        },
        {
          "name": "_stamina",
          "type": "uint8"
        },
        {
          "name": "_technique",
          "type": "uint8"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "newPlayer",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "name": "xp",
          "type": "uint256"
        },
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "age",
          "type": "uint8"
        },
        {
          "name": "height",
          "type": "uint8"
        },
        {
          "name": "condition",
          "type": "uint8"
        },
        {
          "name": "agility",
          "type": "uint8"
        },
        {
          "name": "power",
          "type": "uint8"
        },
        {
          "name": "stamina",
          "type": "uint8"
        },
        {
          "name": "technique",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "conditionGainOnRest",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "playerId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "attribute",
          "type": "uint8"
        }
      ],
      "name": "Train",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "playerId",
          "type": "uint256"
        }
      ],
      "name": "Rest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        },
        {
          "name": "_attr",
          "type": "uint8"
        }
      ],
      "name": "train",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "rest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.5+commit.47a71e8f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"},{\"name\":\"_attr\",\"type\":\"uint8\"}],\"name\":\"train\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"conditionCostToTrain\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"attributeGainOnTrain\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"rest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"xpCostToTrain\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"xpCostToRest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_xp\",\"type\":\"uint256\"},{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_age\",\"type\":\"uint8\"},{\"name\":\"_height\",\"type\":\"uint8\"},{\"name\":\"_condition\",\"type\":\"uint8\"},{\"name\":\"_agility\",\"type\":\"uint8\"},{\"name\":\"_power\",\"type\":\"uint8\"},{\"name\":\"_stamina\",\"type\":\"uint8\"},{\"name\":\"_technique\",\"type\":\"uint8\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"newPlayer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"name\":\"xp\",\"type\":\"uint256\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"age\",\"type\":\"uint8\"},{\"name\":\"height\",\"type\":\"uint8\"},{\"name\":\"condition\",\"type\":\"uint8\"},{\"name\":\"agility\",\"type\":\"uint8\"},{\"name\":\"power\",\"type\":\"uint8\"},{\"name\":\"stamina\",\"type\":\"uint8\"},{\"name\":\"technique\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"conditionGainOnRest\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"playerId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"attribute\",\"type\":\"uint8\"}],\"name\":\"Train\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"playerId\",\"type\":\"uint256\"}],\"name\":\"Rest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/alexroan/Documents/Projects/Blockchain/DApps/tennis-manager/contracts/TrainableTennisPlayer.sol\":\"TrainableTennisPlayer\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/alexroan/Documents/Projects/Blockchain/DApps/tennis-manager/contracts/TennisPlayerBase.sol\":{\"keccak256\":\"0x067156eefe5a0f37e17eb8f5a53fb49837fbeb3c982f6a6006eccfd9ec3df8ea\",\"urls\":[\"bzzr://675a1243634754499075f0edb0e48c950e8c5309e7f1653400cd2b161581faa6\"]},\"/Users/alexroan/Documents/Projects/Blockchain/DApps/tennis-manager/contracts/TrainableTennisPlayer.sol\":{\"keccak256\":\"0xd00c15b31e5a209c9a6ad722d1a17bb0fac9a53408a154fe77a05397e213f977\",\"urls\":[\"bzzr://0a2005e0561d3411d4f349b6783ffcc430f49dd662300de191f22d272ac0a80a\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzzr://51482c01bddf23793bddee43b60ab9578a62948a4f2082def24ea792a553b055\"]},\"@openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzzr://8ab3b1e3d023aafb8a2d127de323b74567084e821b955b5f543e67fe964b1a6b\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzzr://07dffd4225b87bb0aa8d02cfdb04640c2e02e59b35143accd0dd757775449c61\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzzr://14f0ef90a240b2aca847fe1489b10965e04ba16cf221f52ed6470d0cad291f9d\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzzr://292843005e754e752644f767477ec5ad7a1ffc91ddb18c38b8079c62f3993cad\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzzr://ab46c9368bc3abdded5eb85858304518c8a0291060ab42087075d759dbf3925f\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1a1c02bc2487c763ad240f6b6440ec9dcb84870879aea3ed2a6b9cd300b637c7\",\"urls\":[\"bzzr://bb2f66d9db67f855132a36c30e210384ce20ef9ccdc203489138f6ed2dd8fae8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x680c11bc8173eef7d5db843baaf64ce499476de2c172f6aea631dbee54bcd2e6\",\"urls\":[\"bzzr://8a586d8fd1e36ecb1bebccdd5969e38fbf7d435cf9703ffc9647be8c97bf0d31\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzzr://2f8b9c142d30b43eab7b77dbcc632a51987eeb62371777d765e9311c0b3c4c13\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzzr://4e1d23731da27602b8c552e54fb9976dadf8cf46a8f90a3c8c1b85fe044618b9\"]},\"@openzeppelin/contracts/utils/SafeCast.sol\":{\"keccak256\":\"0xb7353a57c9e371c85983df8997caf9bb6fa60c3744b34b2bfcf4faa52d06eaec\",\"urls\":[\"bzzr://ca1f1bd047ccacf8ea1b40270c12baab9f1bf9359bbd1cc305e3209e5a812eaa\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "80:2113:5:-;;;232:37;;;311;268:1;-1:-1:-1;;232:37:5;;;;;;;-1:-1:-1;;275:30:5;;;-1:-1:-1;;311:37:5;;-1:-1:-1;;383:29:5;;;-1:-1:-1;;418:37:5;;;;;718:40:8;737:20;718:18;;;;;:40;;:::i;:::-;2262::12;2136:10;2281:20;;2262:18;;;:40;;:::i;:::-;698:17:11;718:12;:10;;;:12;;:::i;:::-;740:6;:18;;-1:-1:-1;;;;;;740:18:11;-1:-1:-1;;;;;740:18:11;;;;;;;;773:43;;740:18;;-1:-1:-1;740:18:11;-1:-1:-1;;773:43:11;;-1:-1:-1;;773:43:11;664:159;80:2113:5;;1442:190:8;1517:25;;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1585:40:8;1621:4;1585:40;;;1442:190::o;788:96:6:-;867:10;788:96;:::o;80:2113:5:-;;;;;;;",
  "deployedSourceMap": "80:2113:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;80:2113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;915:133:8;-1:-1:-1;;;;;;915:133:8;;:::i;:::-;;;;;;;;;;;;;;;;;;4283:200:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4283:200:12;;:::i;:::-;;;;-1:-1:-1;;;;;4283:200:12;;;;;;;;;;;;;;3583:415;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3583:415:12;;;;;;;;:::i;:::-;;668:1091:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;668:1091:5;;;;;;;;;:::i;5929:287:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5929:287:12;;;;;;;;;;;;;;;;;:::i;232:37:5:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6865:132:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6865:132:12;;;;;;;;;;;;;;;;;:::i;311:37:5:-;;;:::i;2939:223:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2939:223:12;;:::i;1806:385:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1806:385:5;;:::i;2513:207:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2513:207:12;-1:-1:-1;;;;;2513:207:12;;:::i;:::-;;;;;;;;;;;;;;;;275:30:5;;;:::i;1684:137:11:-;;;:::i;899:77::-;;;:::i;1250:92::-;;;:::i;4776:249:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4776:249:12;;;;;;;;;;:::i;383:29:5:-;;;:::i;7720:269:12:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;7720:269:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;7720:269:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7720:269:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7720:269:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7720:269:12;;-1:-1:-1;7720:269:12;;-1:-1:-1;;;;;7720:269:12:i;739:409:4:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;739:409:4;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;739:409:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;739:409:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;-1:-1;;;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;739:409:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;739:409:4;;-1:-1:-1;;;739:409:4;;;;;;;-1:-1:-1;739:409:4;;;;;;;;;;;;;;-1:-1:-1;739:409:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;739:409:4;;:::i;5347:145:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5347:145:12;;;;;;;;;;:::i;1970:107:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1970:107:11;-1:-1:-1;;;;;1970:107:11;;:::i;669:23:4:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;669:23:4;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;669:23:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;418:37:5;;;:::i;915:133:8:-;-1:-1:-1;;;;;;1008:33:8;985:4;1008:33;;;;;;;;;;;;;;915:133::o;4283:200:12:-;4342:7;4369:16;4377:7;4369;:16::i;:::-;4361:73;;;;;;-1:-1:-1;;;;;4361:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4452:24:12;;;;:15;:24;;;;;;-1:-1:-1;;;;;4452:24:12;;4283:200::o;3583:415::-;3646:13;3662:16;3670:7;3662;:16::i;:::-;3646:32;-1:-1:-1;;;;;;3696:11:12;;;;;;;;3688:57;;;;-1:-1:-1;;;;;3688:57:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3780:5;-1:-1:-1;;;;;3764:21:12;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3764:21:12;;:62;;;;3789:37;3806:5;3813:12;:10;:12::i;:::-;3789:16;:37::i;:::-;3756:152;;;;;;-1:-1:-1;;;;;3756:152:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3919:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3919:29:12;-1:-1:-1;;;;;3919:29:12;;;;;;;;;3963:28;;3919:24;;3963:28;;;;;;;3583:415;;;:::o;668:1091:5:-;801:10;785:12;793:3;785:7;:12::i;:::-;-1:-1:-1;;;;;785:26:5;;777:71;;;;;-1:-1:-1;;;;;777:71:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;934:59;948:7;956:3;948:12;;;;;;;;;;;;;;;;;;:22;:12;;;;;:22;;972:20;;948:22;;;;;;;;972:20;934:13;:59::i;:::-;909:7;:12;;917:3;;909:12;;;;;;;;;;;;;;;;:22;;;:84;;;;;;;;;;;;;;;;;;1052:47;1068:7;1076:3;1068:12;;;;;;;;;;;;;;;;;;;;;;;:15;1085:13;;;;;;;1052:15;:47::i;:::-;1034:7;:12;;1042:3;;1034:12;;;;;;;;;;;;;;;;;;:65;;;;1155:5;:26;;;;;;;;;1151:570;;;1220:52;1229:7;1237:3;1229:12;;;;;;;;;;;;;;;;;;:20;:12;;;;;:20;;1251;;1229;;;;;;;;1251;;;;;1220:8;:52::i;:::-;1197:7;:12;;1205:3;;1197:12;;;;;;;;;;;;;;;;:20;;;:75;;;;;;;;;;;;;;;;;;1151:570;;;1310:15;1301:5;:24;;;;;;;;;1297:424;;;1362:50;1371:7;1379:3;1371:12;;;;;;;;;;;;;;;;;;:18;:12;;;;;:18;;1391:20;;1371:18;-1:-1:-1;;;1371:18:5;;;;;;1391:20;;;;;1362:8;:50::i;:::-;1341:7;:12;;1349:3;;1341:12;;;;;;;;;;;;;;;;:18;;;:71;;;;;;;;;;;;;;;;;;1297:424;;;1450:17;1441:5;:26;;;;;;;;;1437:284;;;1506:52;1515:7;1523:3;1515:12;;;;;;;;;;;;;;;;;;:20;:12;;;;;:20;;1537;;1515;;;;;;;;1537;;;;;1506:8;:52::i;:::-;1483:7;:12;;1491:3;;1483:12;;;;;;;;;;;;;;;;:20;;;:75;;;;;;;;;;;;;;;;;;1437:284;;;1596:19;1587:5;:28;;;;;;;;;1583:138;;;1656:54;1665:7;1673:3;1665:12;;;;;;;;;;;;;;;;;;:22;:12;;;;;:22;;1689:20;;1665:22;-1:-1:-1;;;1665:22:5;;;;;;1689:20;;;;;1656:8;:54::i;:::-;1631:7;:12;;1639:3;;1631:12;;;;;;;;;;;;;;;;:22;;;:79;;;;;;;;;;;;;;;;;;1583:138;1741:3;1735:17;1746:5;1735:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;668:1091;;:::o;5929:287:12:-;6071:41;6090:12;:10;:12::i;:::-;6104:7;6071:18;:41::i;:::-;6063:103;;;;;;-1:-1:-1;;;;;6063:103:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6177:32;6191:4;6197:2;6201:7;6177:13;:32::i;:::-;5929:287;;;:::o;232:37:5:-;;;;;;:::o;6865:132:12:-;6951:39;6968:4;6974:2;6978:7;6951:39;;;;;;;;;;;;:16;:39::i;311:37:5:-;;;;;;;;;:::o;2939:223:12:-;2994:7;3029:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3029:20:12;3067:19;;;3059:73;;;;-1:-1:-1;;;;;3059:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3150:5;2939:223;-1:-1:-1;;2939:223:12:o;1806:385:5:-;1920:10;1904:12;1912:3;1904:7;:12::i;:::-;-1:-1:-1;;;;;1904:26:5;;1896:70;;;;;-1:-1:-1;;;;;1896:70:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;2026:46;2042:7;2050:3;2042:12;;;;;;;;;;;;;;;;;;;;;;;:15;2059:12;;;;;;;2026:15;:46::i;:::-;2008:7;:12;;2016:3;;2008:12;;;;;;;;;;;;;;;;;;;:64;2116:7;:12;;2107:53;;2116:7;2124:3;;2116:12;;;;;;;;;;;;;;:22;:12;;;;;:22;;2140:19;;2116:22;;;;;;;;-1:-1:-1;;;2140:19:5;;;;2107:8;:53::i;:::-;2082:7;:12;;2090:3;;2082:12;;;;;;;;;;;;;:22;:12;;;;;:22;:78;;;;;;;;;-1:-1:-1;;2082:78:5;;;;;;;;;;2175:9;;2180:3;;2175:9;;;1806:385;:::o;2513:207:12:-;2568:7;-1:-1:-1;;;;;2595:19:12;;;;2587:74;;;;-1:-1:-1;;;;;2587:74:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2679:24:12;;;;;;:17;:24;;;;;:34;;:32;:34::i;275:30:5:-;;;;;;;;;:::o;1684:137:11:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;-1:-1:-1;;;;;1095:54:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1766:6;;1745:40;;1782:1;;-1:-1:-1;;;;;1766:6:11;;1745:40;;1782:1;;1745:40;1795:6;:19;;-1:-1:-1;;;;;;1795:19:11;;;1684:137::o;899:77::-;963:6;;-1:-1:-1;;;;;963:6:11;899:77;;:::o;1250:92::-;1329:6;;1290:4;;-1:-1:-1;;;;;1329:6:11;1313:12;:10;:12::i;:::-;-1:-1:-1;;;;;1313:22:11;;1306:29;;1250:92;:::o;4776:249:12:-;4861:12;:10;:12::i;:::-;-1:-1:-1;;;;;4855:18:12;;;;;;;4847:56;;;;;-1:-1:-1;;;;;4847:56:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;4953:8;4914:18;:32;4933:12;:10;:12::i;:::-;-1:-1:-1;;;;;4914:32:12;;;;;;;;;;;;;;;;;-1:-1:-1;4914:32:12;;;:36;;;;;;;;;;;;:47;;-1:-1:-1;;4914:47:12;;;;;;;;;;;4991:12;:10;:12::i;:::-;4976:42;;;;;;;;;;-1:-1:-1;;;;;4976:42:12;;;;;;;;;;;;;;4776:249;;:::o;383:29:5:-;;;;;;;;;:::o;7720:269:12:-;7834:41;7853:12;:10;:12::i;:::-;7867:7;7834:18;:41::i;:::-;7826:103;;;;;;-1:-1:-1;;;;;7826:103:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7939:43;7957:4;7963:2;7967:7;7976:5;7939:17;:43::i;:::-;7720:269;;;;:::o;739:409:4:-;960:4;1103:9:11;:7;:9::i;:::-;1095:54;;;;;;;-1:-1:-1;;;;;1095:54:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;971:7:4;981;:14;;;;971:24;;999:7;1016:89;;;;;;;;1023:3;1016:89;;;;1028:5;1016:89;;;;1035:4;1016:89;;;;;;1041:7;1016:89;;;;;;1050:10;1016:89;;;;;;1066:8;1016:89;;;;;;1076:6;1016:89;;;;;;1084:8;1016:89;;;;;;1094:10;1016:89;;;;;999:110;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;999:110:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;999:110:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;999:110:4;;;;;;;;-1:-1:-1;;999:110:4;;;;;;;;;;;-1:-1:-1;;999:110:4;;;;;;;;;;;;;-1:-1:-1;;999:110:4;;;;;;;;;;-1:-1:-1;;999:110:4;-1:-1:-1;;;999:110:4;;;;;;;;-1:-1:-1;;999:110:4;;;;;;;;;;;;;-1:-1:-1;;999:110:4;-1:-1:-1;;;999:110:4;;;;;;;;;;;;;;-1:-1:-1;1113:18:4;1123:3;1128:2;1113:9;:18::i;:::-;1142:2;739:409;-1:-1:-1;;;;;;;;;;;739:409:4:o;5347:145:12:-;-1:-1:-1;;;;;5450:25:12;;;5427:4;5450:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5347:145::o;1970:107:11:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;-1:-1:-1;;;;;1095:54:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;669:23:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;669:23:4;;;;;;;-1:-1:-1;;669:23:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;669:23:4;;;;;;;;;;;-1:-1:-1;;;669:23:4;;;;;:::o;418:37:5:-;;;-1:-1:-1;;;418:37:5;;;;;:::o;9158:152:12:-;9215:4;9247:20;;;:11;:20;;;;;;-1:-1:-1;;;;;9247:20:12;9284:19;;;9158:152::o;788:96:6:-;867:10;788:96;:::o;1364:129:4:-;1430:5;1454:32;:22;1467:8;1454;;;;1467;;1454:22;:12;:22;:::i;:::-;:30;:32::i;:::-;1447:39;1364:129;-1:-1:-1;;;1364:129:4:o;1544:113::-;1611:4;1634:16;:2;1641:8;;;1634:16;:6;:16;:::i;1190:124::-;1251:5;1275:32;:22;1288:8;1275;;;;1288;;1275:22;:12;:22;:::i;9671:329:12:-;9756:4;9780:16;9788:7;9780;:16::i;:::-;9772:73;;;;;;-1:-1:-1;;;;;9772:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9855:13;9871:16;9879:7;9871;:16::i;:::-;9855:32;;9916:5;-1:-1:-1;;;;;9905:16:12;:7;-1:-1:-1;;;;;9905:16:12;;:51;;;;9949:7;-1:-1:-1;;;;;9925:31:12;:20;9937:7;9925:11;:20::i;:::-;-1:-1:-1;;;;;9925:31:12;;9905:51;:87;;;;9960:32;9977:5;9984:7;9960:16;:32::i;:::-;9897:96;9671:329;-1:-1:-1;;;;9671:329:12:o;13281:447::-;13394:4;-1:-1:-1;;;;;13374:24:12;:16;13382:7;13374;:16::i;:::-;-1:-1:-1;;;;;13374:24:12;;13366:78;;;;-1:-1:-1;;;;;13366:78:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13462:16:12;;;;13454:65;;;;-1:-1:-1;;;;;13454:65:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13530:23;13545:7;13530:14;:23::i;:::-;-1:-1:-1;;;;;13564:23:12;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;13609:21:12;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;13653:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;13653:25:12;-1:-1:-1;;;;;13653:25:12;;;;;;;;;13694:27;;13653:20;;13694:27;;;;;;;13281:447;;;:::o;1065:112:7:-;1156:14;;1065:112::o;8694:269:12:-;8803:32;8817:4;8823:2;8827:7;8803:13;:32::i;:::-;8853:48;8876:4;8882:2;8886:7;8895:5;8853:22;:48::i;:::-;8845:111;;;;;;-1:-1:-1;;;;;8845:111:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10529:100;10596:26;10606:2;10610:7;10596:26;;;;;;;;;;;;:9;:26::i;:::-;10529:100;;:::o;2178:225:11:-;-1:-1:-1;;;;;2251:22:11;;;;2243:73;;;;-1:-1:-1;;;;;2243:73:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2352:6;;2331:38;;-1:-1:-1;;;;;2331:38:11;;;;2352:6;;2331:38;;2352:6;;2331:38;2379:6;:17;;-1:-1:-1;;;;;;2379:17:11;-1:-1:-1;;;;;2379:17:11;;;;;;;;;;2178:225::o;1274:134:10:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;2884:171:16:-;2939:5;2972:4;2964:12;;2956:63;;;;-1:-1:-1;;;;;2956:63:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3042:5:16;2884:171::o;834:176:10:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;;;938:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;15580:171:12;15679:1;15643:24;;;:15;:24;;;;;;-1:-1:-1;;;;;15643:24:12;:38;15639:106;;15732:1;15697:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;15697:37:12;;;15580:171::o;1367:108:7:-;1447:14;;:21;;1466:1;1447:21;:18;:21;:::i;:::-;1430:38;;1367:108::o;1183:178::-;1335:19;;1353:1;1335:19;;;1183:178::o;14367:1051:12:-;14488:4;14513:15;:2;-1:-1:-1;;;;;14513:13:12;;:15::i;:::-;14512:16;14508:58;;;-1:-1:-1;14551:4:12;14544:11;;14508:58;14635:12;14649:23;-1:-1:-1;;;;;14676:7:12;;-1:-1:-1;;;;;14779:12:12;:10;:12::i;:::-;14805:4;14823:7;14844:5;14684:175;;;;;;-1:-1:-1;;;;;14684:175:12;-1:-1:-1;;;;;14684:175:12;;;;;;-1:-1:-1;;;;;14684:175:12;-1:-1:-1;;;;;14684:175:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14684:175:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14684:175:12;;;-1:-1:-1;;26:21;;;22:32;6:49;;14684:175:12;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;14684:175:12;;;179:29:-1;;;;160:49;;14676:184:12;;;14684:175;;14676:184;;-1:-1:-1;14676:184:12;;-1:-1:-1;25:18;-1:-1;14676:184:12;-1:-1:-1;14676:184:12;;-1:-1:-1;14676:184:12;;-1:-1:-1;25:18;36:153;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;14676:184:12;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;14634:226:12;;;;14875:7;14874:8;14870:542;;;14902:17;;:21;14898:376;;15067:10;15061:17;15127:15;15114:10;15110:2;15106:19;15099:44;15016:145;15199:60;;-1:-1:-1;;;;;15199:60:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14870:542;15304:13;15331:10;15320:32;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15320:32:12;-1:-1:-1;;;;;;15374:26:12;-1:-1:-1;;;;;15374:26:12;;-1:-1:-1;15366:35:12;;-1:-1:-1;;;15366:35:12;11230:239;11317:18;11323:2;11327:7;11317:5;:18::i;:::-;11353:54;11384:1;11388:2;11392:7;11401:5;11353:22;:54::i;:::-;11345:117;;;;;;-1:-1:-1;;;;;11345:117:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1732:187:10;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;;;1837:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:10;;;1732:187::o;686:610:15:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;;1273:15:15;;;1238:51;-1:-1:-1;;686:610:15:o;11714:327:12:-;-1:-1:-1;;;;;11785:16:12;;;;11777:61;;;;;-1:-1:-1;;;;;11777:61:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11857:16;11865:7;11857;:16::i;:::-;11856:17;11848:58;;;;;-1:-1:-1;;;;;11848:58:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;11917:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;11917:25:12;-1:-1:-1;;;;;11917:25:12;;;;;;;;11952:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;12001;;12026:7;;-1:-1:-1;;;;;12001:33:12;;;12018:1;;12001:33;;12018:1;;12001:33;11714:327;;:::o;80:2113:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;80:2113:5;;;;-1:-1:-1;80:2113:5;;;;;;;;;;;;;;",
  "source": "// Author: Alex Roan\npragma solidity ^0.5.5;\n\nimport \"./TennisPlayerBase.sol\";\n\ncontract TrainableTennisPlayer is TennisPlayerBase {\n\n    // TODO - xp costs to change depending on current attribute level?\n\n    // Training costs\n    uint8 public conditionCostToTrain = 5;\n    uint8 public xpCostToTrain = 8;\n    uint8 public attributeGainOnTrain = 1;\n\n    // Rest costs and gains\n    uint8 public xpCostToRest = 6;\n    uint8 public conditionGainOnRest = 15;\n\n    enum Attribute { agility, power, stamina, technique }\n\n    event Train(uint indexed playerId, Attribute attribute);\n    event Rest(uint indexed playerId);\n\n    // Train a player increasing an attribute\n    function train(uint _id, Attribute _attr) public {\n        // Only the owner of the player can train\n        require(ownerOf(_id) == msg.sender, \"Must be owner of player to train\");\n\n        // The player must be fit enough to train\n        players[_id].condition = castSubtract8(players[_id].condition, conditionCostToTrain);\n        // Must have enough XP\n        players[_id].xp = castSubtract256(players[_id].xp, xpCostToTrain);\n\n        // Increase the chosen attribute\n        if (_attr == Attribute.agility) {\n            players[_id].agility = castAdd8(players[_id].agility, attributeGainOnTrain);\n        }\n        else if (_attr == Attribute.power) {\n            players[_id].power = castAdd8(players[_id].power, attributeGainOnTrain);\n        }\n        else if (_attr == Attribute.stamina) {\n            players[_id].stamina = castAdd8(players[_id].stamina, attributeGainOnTrain);\n        }\n        else if (_attr == Attribute.technique) {\n            players[_id].technique = castAdd8(players[_id].technique, attributeGainOnTrain);\n        }\n        emit Train(_id, _attr);\n    }\n\n    // Rest player, increasing condition\n    function rest(uint _id) public {\n        // Only the owner of the player can rest\n        require(ownerOf(_id) == msg.sender, \"Must be owner of player to rest\");\n\n        // Must have enough XP\n        players[_id].xp = castSubtract256(players[_id].xp, xpCostToRest);\n        players[_id].condition = castAdd8(players[_id].condition, conditionGainOnRest);\n        emit Rest(_id);\n    }\n}",
  "sourcePath": "/Users/alexroan/Documents/Projects/Blockchain/DApps/tennis-manager/contracts/TrainableTennisPlayer.sol",
  "ast": {
    "absolutePath": "/Users/alexroan/Documents/Projects/Blockchain/DApps/tennis-manager/contracts/TrainableTennisPlayer.sol",
    "exportedSymbols": {
      "TrainableTennisPlayer": [
        863
      ]
    },
    "id": 864,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 658,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "21:23:5"
      },
      {
        "absolutePath": "/Users/alexroan/Documents/Projects/Blockchain/DApps/tennis-manager/contracts/TennisPlayerBase.sol",
        "file": "./TennisPlayerBase.sol",
        "id": 659,
        "nodeType": "ImportDirective",
        "scope": 864,
        "sourceUnit": 657,
        "src": "46:32:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 660,
              "name": "TennisPlayerBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 656,
              "src": "114:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TennisPlayerBase_$656",
                "typeString": "contract TennisPlayerBase"
              }
            },
            "id": 661,
            "nodeType": "InheritanceSpecifier",
            "src": "114:16:5"
          }
        ],
        "contractDependencies": [
          656,
          890,
          991,
          1001,
          1306,
          1977,
          2080
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 863,
        "linearizedBaseContracts": [
          863,
          656,
          1306,
          1977,
          2080,
          991,
          1001,
          890
        ],
        "name": "TrainableTennisPlayer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 664,
            "name": "conditionCostToTrain",
            "nodeType": "VariableDeclaration",
            "scope": 863,
            "src": "232:37:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 662,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "232:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 663,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "268:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 667,
            "name": "xpCostToTrain",
            "nodeType": "VariableDeclaration",
            "scope": 863,
            "src": "275:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 665,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "275:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "38",
              "id": 666,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "304:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8_by_1",
                "typeString": "int_const 8"
              },
              "value": "8"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 670,
            "name": "attributeGainOnTrain",
            "nodeType": "VariableDeclaration",
            "scope": 863,
            "src": "311:37:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 668,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "311:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 669,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "347:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 673,
            "name": "xpCostToRest",
            "nodeType": "VariableDeclaration",
            "scope": 863,
            "src": "383:29:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 671,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "383:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "36",
              "id": 672,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "411:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6_by_1",
                "typeString": "int_const 6"
              },
              "value": "6"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 676,
            "name": "conditionGainOnRest",
            "nodeType": "VariableDeclaration",
            "scope": 863,
            "src": "418:37:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 674,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "418:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3135",
              "id": 675,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "453:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_15_by_1",
                "typeString": "int_const 15"
              },
              "value": "15"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "TrainableTennisPlayer.Attribute",
            "id": 681,
            "members": [
              {
                "id": 677,
                "name": "agility",
                "nodeType": "EnumValue",
                "src": "479:7:5"
              },
              {
                "id": 678,
                "name": "power",
                "nodeType": "EnumValue",
                "src": "488:5:5"
              },
              {
                "id": 679,
                "name": "stamina",
                "nodeType": "EnumValue",
                "src": "495:7:5"
              },
              {
                "id": 680,
                "name": "technique",
                "nodeType": "EnumValue",
                "src": "504:9:5"
              }
            ],
            "name": "Attribute",
            "nodeType": "EnumDefinition",
            "src": "462:53:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 687,
            "name": "Train",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "indexed": true,
                  "name": "playerId",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "533:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 685,
                  "indexed": false,
                  "name": "attribute",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "556:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Attribute_$681",
                    "typeString": "enum TrainableTennisPlayer.Attribute"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 684,
                    "name": "Attribute",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 681,
                    "src": "556:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Attribute_$681",
                      "typeString": "enum TrainableTennisPlayer.Attribute"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "532:44:5"
            },
            "src": "521:56:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 691,
            "name": "Rest",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 689,
                  "indexed": true,
                  "name": "playerId",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "593:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "593:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "592:23:5"
            },
            "src": "582:34:5"
          },
          {
            "body": {
              "id": 815,
              "nodeType": "Block",
              "src": "717:1042:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 700,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "793:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 699,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1410
                            ],
                            "referencedDeclaration": 1410,
                            "src": "785:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "785:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 702,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2294,
                            "src": "801:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "801:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "785:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206265206f776e6572206f6620706c6179657220746f20747261696e",
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "813:34:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2812d4bf2531b656805c72a09b1e32ae1d4cf0bc06dc1bd2355053982e8405d4",
                          "typeString": "literal_string \"Must be owner of player to train\""
                        },
                        "value": "Must be owner of player to train"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2812d4bf2531b656805c72a09b1e32ae1d4cf0bc06dc1bd2355053982e8405d4",
                          "typeString": "literal_string \"Must be owner of player to train\""
                        }
                      ],
                      "id": 698,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2297,
                        2298
                      ],
                      "referencedDeclaration": 2298,
                      "src": "777:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:71:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 707,
                  "nodeType": "ExpressionStatement",
                  "src": "777:71:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 708,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 540,
                          "src": "909:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                            "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                          }
                        },
                        "id": 710,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 709,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "917:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "909:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$537_storage",
                          "typeString": "struct TennisPlayerBase.Player storage ref"
                        }
                      },
                      "id": 711,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "condition",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 528,
                      "src": "909:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 713,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 540,
                              "src": "948:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                              }
                            },
                            "id": 715,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 714,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "956:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "948:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$537_storage",
                              "typeString": "struct TennisPlayerBase.Player storage ref"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "condition",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 528,
                          "src": "948:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 717,
                          "name": "conditionCostToTrain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 664,
                          "src": "972:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 712,
                        "name": "castSubtract8",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "934:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$returns$_t_uint8_$",
                          "typeString": "function (uint8,uint8) pure returns (uint8)"
                        }
                      },
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "934:59:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "909:84:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "909:84:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 721,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 540,
                          "src": "1034:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                            "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                          }
                        },
                        "id": 723,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 722,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "1042:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1034:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$537_storage",
                          "typeString": "struct TennisPlayerBase.Player storage ref"
                        }
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "xp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 520,
                      "src": "1034:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 726,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 540,
                              "src": "1068:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                              }
                            },
                            "id": 728,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 727,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "1076:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1068:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$537_storage",
                              "typeString": "struct TennisPlayerBase.Player storage ref"
                            }
                          },
                          "id": 729,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 520,
                          "src": "1068:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 730,
                          "name": "xpCostToTrain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "1085:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 725,
                        "name": "castSubtract256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 655,
                        "src": "1052:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint8) pure returns (uint256)"
                        }
                      },
                      "id": 731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1052:47:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1034:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:65:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_Attribute_$681",
                      "typeString": "enum TrainableTennisPlayer.Attribute"
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 734,
                      "name": "_attr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "1155:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Attribute_$681",
                        "typeString": "enum TrainableTennisPlayer.Attribute"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 735,
                        "name": "Attribute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "1164:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Attribute_$681_$",
                          "typeString": "type(enum TrainableTennisPlayer.Attribute)"
                        }
                      },
                      "id": 736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "agility",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1164:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Attribute_$681",
                        "typeString": "enum TrainableTennisPlayer.Attribute"
                      }
                    },
                    "src": "1155:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_Attribute_$681",
                        "typeString": "enum TrainableTennisPlayer.Attribute"
                      },
                      "id": 755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 752,
                        "name": "_attr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "1301:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Attribute_$681",
                          "typeString": "enum TrainableTennisPlayer.Attribute"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 753,
                          "name": "Attribute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "1310:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Attribute_$681_$",
                            "typeString": "type(enum TrainableTennisPlayer.Attribute)"
                          }
                        },
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "power",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1310:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Attribute_$681",
                          "typeString": "enum TrainableTennisPlayer.Attribute"
                        }
                      },
                      "src": "1301:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Attribute_$681",
                          "typeString": "enum TrainableTennisPlayer.Attribute"
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 770,
                          "name": "_attr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 695,
                          "src": "1441:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Attribute_$681",
                            "typeString": "enum TrainableTennisPlayer.Attribute"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 771,
                            "name": "Attribute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 681,
                            "src": "1450:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Attribute_$681_$",
                              "typeString": "type(enum TrainableTennisPlayer.Attribute)"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "stamina",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1450:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Attribute_$681",
                            "typeString": "enum TrainableTennisPlayer.Attribute"
                          }
                        },
                        "src": "1441:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_Attribute_$681",
                            "typeString": "enum TrainableTennisPlayer.Attribute"
                          },
                          "id": 791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 788,
                            "name": "_attr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 695,
                            "src": "1587:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Attribute_$681",
                              "typeString": "enum TrainableTennisPlayer.Attribute"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 789,
                              "name": "Attribute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 681,
                              "src": "1596:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Attribute_$681_$",
                                "typeString": "type(enum TrainableTennisPlayer.Attribute)"
                              }
                            },
                            "id": 790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "technique",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1596:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Attribute_$681",
                              "typeString": "enum TrainableTennisPlayer.Attribute"
                            }
                          },
                          "src": "1587:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 806,
                        "nodeType": "IfStatement",
                        "src": "1583:138:5",
                        "trueBody": {
                          "id": 805,
                          "nodeType": "Block",
                          "src": "1617:104:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 792,
                                      "name": "players",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 540,
                                      "src": "1631:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                        "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                      }
                                    },
                                    "id": 794,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 793,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 693,
                                      "src": "1639:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1631:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Player_$537_storage",
                                      "typeString": "struct TennisPlayerBase.Player storage ref"
                                    }
                                  },
                                  "id": 795,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "technique",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 536,
                                  "src": "1631:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 797,
                                          "name": "players",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 540,
                                          "src": "1665:7:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                            "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                          }
                                        },
                                        "id": 799,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 798,
                                          "name": "_id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 693,
                                          "src": "1673:3:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1665:12:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$537_storage",
                                          "typeString": "struct TennisPlayerBase.Player storage ref"
                                        }
                                      },
                                      "id": 800,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "technique",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 536,
                                      "src": "1665:22:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 801,
                                      "name": "attributeGainOnTrain",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 670,
                                      "src": "1689:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 796,
                                    "name": "castAdd8",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 617,
                                    "src": "1656:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$returns$_t_uint8_$",
                                      "typeString": "function (uint8,uint8) pure returns (uint8)"
                                    }
                                  },
                                  "id": 802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1656:54:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1631:79:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 804,
                              "nodeType": "ExpressionStatement",
                              "src": "1631:79:5"
                            }
                          ]
                        }
                      },
                      "id": 807,
                      "nodeType": "IfStatement",
                      "src": "1437:284:5",
                      "trueBody": {
                        "id": 787,
                        "nodeType": "Block",
                        "src": "1469:100:5",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 774,
                                    "name": "players",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 540,
                                    "src": "1483:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                      "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                    }
                                  },
                                  "id": 776,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 775,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "1491:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1483:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Player_$537_storage",
                                    "typeString": "struct TennisPlayerBase.Player storage ref"
                                  }
                                },
                                "id": 777,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "stamina",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 534,
                                "src": "1483:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 779,
                                        "name": "players",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 540,
                                        "src": "1515:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                          "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                        }
                                      },
                                      "id": 781,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 780,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 693,
                                        "src": "1523:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1515:12:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$537_storage",
                                        "typeString": "struct TennisPlayerBase.Player storage ref"
                                      }
                                    },
                                    "id": 782,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "stamina",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 534,
                                    "src": "1515:20:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 783,
                                    "name": "attributeGainOnTrain",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 670,
                                    "src": "1537:20:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 778,
                                  "name": "castAdd8",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 617,
                                  "src": "1506:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$returns$_t_uint8_$",
                                    "typeString": "function (uint8,uint8) pure returns (uint8)"
                                  }
                                },
                                "id": 784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1506:52:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "1483:75:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 786,
                            "nodeType": "ExpressionStatement",
                            "src": "1483:75:5"
                          }
                        ]
                      }
                    },
                    "id": 808,
                    "nodeType": "IfStatement",
                    "src": "1297:424:5",
                    "trueBody": {
                      "id": 769,
                      "nodeType": "Block",
                      "src": "1327:96:5",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 756,
                                  "name": "players",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 540,
                                  "src": "1341:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                    "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                  }
                                },
                                "id": 758,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 757,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 693,
                                  "src": "1349:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1341:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Player_$537_storage",
                                  "typeString": "struct TennisPlayerBase.Player storage ref"
                                }
                              },
                              "id": 759,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "power",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 532,
                              "src": "1341:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 761,
                                      "name": "players",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 540,
                                      "src": "1371:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                        "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                      }
                                    },
                                    "id": 763,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 762,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 693,
                                      "src": "1379:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1371:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Player_$537_storage",
                                      "typeString": "struct TennisPlayerBase.Player storage ref"
                                    }
                                  },
                                  "id": 764,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "power",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 532,
                                  "src": "1371:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 765,
                                  "name": "attributeGainOnTrain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 670,
                                  "src": "1391:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 760,
                                "name": "castAdd8",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 617,
                                "src": "1362:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$returns$_t_uint8_$",
                                  "typeString": "function (uint8,uint8) pure returns (uint8)"
                                }
                              },
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1362:50:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "1341:71:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 768,
                          "nodeType": "ExpressionStatement",
                          "src": "1341:71:5"
                        }
                      ]
                    }
                  },
                  "id": 809,
                  "nodeType": "IfStatement",
                  "src": "1151:570:5",
                  "trueBody": {
                    "id": 751,
                    "nodeType": "Block",
                    "src": "1183:100:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 738,
                                "name": "players",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 540,
                                "src": "1197:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                  "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                }
                              },
                              "id": 740,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 739,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 693,
                                "src": "1205:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1197:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$537_storage",
                                "typeString": "struct TennisPlayerBase.Player storage ref"
                              }
                            },
                            "id": 741,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "agility",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 530,
                            "src": "1197:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 743,
                                    "name": "players",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 540,
                                    "src": "1229:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                      "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                    }
                                  },
                                  "id": 745,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 744,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "1237:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1229:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Player_$537_storage",
                                    "typeString": "struct TennisPlayerBase.Player storage ref"
                                  }
                                },
                                "id": 746,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "agility",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 530,
                                "src": "1229:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 747,
                                "name": "attributeGainOnTrain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 670,
                                "src": "1251:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 742,
                              "name": "castAdd8",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 617,
                              "src": "1220:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$returns$_t_uint8_$",
                                "typeString": "function (uint8,uint8) pure returns (uint8)"
                              }
                            },
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1220:52:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1197:75:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 750,
                        "nodeType": "ExpressionStatement",
                        "src": "1197:75:5"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 811,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "1741:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 812,
                        "name": "_attr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "1746:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Attribute_$681",
                          "typeString": "enum TrainableTennisPlayer.Attribute"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_Attribute_$681",
                          "typeString": "enum TrainableTennisPlayer.Attribute"
                        }
                      ],
                      "id": 810,
                      "name": "Train",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 687,
                      "src": "1735:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_Attribute_$681_$returns$__$",
                        "typeString": "function (uint256,enum TrainableTennisPlayer.Attribute)"
                      }
                    },
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1735:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 814,
                  "nodeType": "EmitStatement",
                  "src": "1730:22:5"
                }
              ]
            },
            "documentation": null,
            "id": 816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "train",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 693,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "683:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 692,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 695,
                  "name": "_attr",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "693:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Attribute_$681",
                    "typeString": "enum TrainableTennisPlayer.Attribute"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 694,
                    "name": "Attribute",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 681,
                    "src": "693:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Attribute_$681",
                      "typeString": "enum TrainableTennisPlayer.Attribute"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "682:27:5"
            },
            "returnParameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "717:0:5"
            },
            "scope": 863,
            "src": "668:1091:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 861,
              "nodeType": "Block",
              "src": "1837:354:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 823,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 818,
                              "src": "1912:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 822,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1410
                            ],
                            "referencedDeclaration": 1410,
                            "src": "1904:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1904:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 825,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2294,
                            "src": "1920:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1920:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1904:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206265206f776e6572206f6620706c6179657220746f2072657374",
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1932:33:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e35a356590130031d2a147b591cb6f0df5fcb018aa141588840c90b9081b0ae0",
                          "typeString": "literal_string \"Must be owner of player to rest\""
                        },
                        "value": "Must be owner of player to rest"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e35a356590130031d2a147b591cb6f0df5fcb018aa141588840c90b9081b0ae0",
                          "typeString": "literal_string \"Must be owner of player to rest\""
                        }
                      ],
                      "id": 821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2297,
                        2298
                      ],
                      "referencedDeclaration": 2298,
                      "src": "1896:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:70:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:70:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 831,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 540,
                          "src": "2008:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                            "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                          }
                        },
                        "id": 833,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 832,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 818,
                          "src": "2016:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2008:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$537_storage",
                          "typeString": "struct TennisPlayerBase.Player storage ref"
                        }
                      },
                      "id": 834,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "xp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 520,
                      "src": "2008:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 836,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 540,
                              "src": "2042:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                              }
                            },
                            "id": 838,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 837,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 818,
                              "src": "2050:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2042:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$537_storage",
                              "typeString": "struct TennisPlayerBase.Player storage ref"
                            }
                          },
                          "id": 839,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 520,
                          "src": "2042:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 840,
                          "name": "xpCostToRest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 673,
                          "src": "2059:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 835,
                        "name": "castSubtract256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 655,
                        "src": "2026:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint8) pure returns (uint256)"
                        }
                      },
                      "id": 841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2026:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2008:64:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 843,
                  "nodeType": "ExpressionStatement",
                  "src": "2008:64:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 844,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 540,
                          "src": "2082:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                            "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                          }
                        },
                        "id": 846,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 845,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 818,
                          "src": "2090:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2082:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$537_storage",
                          "typeString": "struct TennisPlayerBase.Player storage ref"
                        }
                      },
                      "id": 847,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "condition",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 528,
                      "src": "2082:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 849,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 540,
                              "src": "2116:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                              }
                            },
                            "id": 851,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 850,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 818,
                              "src": "2124:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2116:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$537_storage",
                              "typeString": "struct TennisPlayerBase.Player storage ref"
                            }
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "condition",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 528,
                          "src": "2116:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 853,
                          "name": "conditionGainOnRest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 676,
                          "src": "2140:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 848,
                        "name": "castAdd8",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "2107:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$returns$_t_uint8_$",
                          "typeString": "function (uint8,uint8) pure returns (uint8)"
                        }
                      },
                      "id": 854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2107:53:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2082:78:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "2082:78:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 858,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "2180:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 857,
                      "name": "Rest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 691,
                      "src": "2175:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2175:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 860,
                  "nodeType": "EmitStatement",
                  "src": "2170:14:5"
                }
              ]
            },
            "documentation": null,
            "id": 862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 862,
                  "src": "1820:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1820:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1819:10:5"
            },
            "returnParameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1837:0:5"
            },
            "scope": 863,
            "src": "1806:385:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 864,
        "src": "80:2113:5"
      }
    ],
    "src": "21:2172:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/alexroan/Documents/Projects/Blockchain/DApps/tennis-manager/contracts/TrainableTennisPlayer.sol",
    "exportedSymbols": {
      "TrainableTennisPlayer": [
        863
      ]
    },
    "id": 864,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 658,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "21:23:5"
      },
      {
        "absolutePath": "/Users/alexroan/Documents/Projects/Blockchain/DApps/tennis-manager/contracts/TennisPlayerBase.sol",
        "file": "./TennisPlayerBase.sol",
        "id": 659,
        "nodeType": "ImportDirective",
        "scope": 864,
        "sourceUnit": 657,
        "src": "46:32:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 660,
              "name": "TennisPlayerBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 656,
              "src": "114:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TennisPlayerBase_$656",
                "typeString": "contract TennisPlayerBase"
              }
            },
            "id": 661,
            "nodeType": "InheritanceSpecifier",
            "src": "114:16:5"
          }
        ],
        "contractDependencies": [
          656,
          890,
          991,
          1001,
          1306,
          1977,
          2080
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 863,
        "linearizedBaseContracts": [
          863,
          656,
          1306,
          1977,
          2080,
          991,
          1001,
          890
        ],
        "name": "TrainableTennisPlayer",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 664,
            "name": "conditionCostToTrain",
            "nodeType": "VariableDeclaration",
            "scope": 863,
            "src": "232:37:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 662,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "232:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "35",
              "id": 663,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "268:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 667,
            "name": "xpCostToTrain",
            "nodeType": "VariableDeclaration",
            "scope": 863,
            "src": "275:30:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 665,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "275:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "38",
              "id": 666,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "304:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_8_by_1",
                "typeString": "int_const 8"
              },
              "value": "8"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 670,
            "name": "attributeGainOnTrain",
            "nodeType": "VariableDeclaration",
            "scope": 863,
            "src": "311:37:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 668,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "311:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 669,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "347:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 673,
            "name": "xpCostToRest",
            "nodeType": "VariableDeclaration",
            "scope": 863,
            "src": "383:29:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 671,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "383:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "36",
              "id": 672,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "411:1:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_6_by_1",
                "typeString": "int_const 6"
              },
              "value": "6"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 676,
            "name": "conditionGainOnRest",
            "nodeType": "VariableDeclaration",
            "scope": 863,
            "src": "418:37:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 674,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "418:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3135",
              "id": 675,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "453:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_15_by_1",
                "typeString": "int_const 15"
              },
              "value": "15"
            },
            "visibility": "public"
          },
          {
            "canonicalName": "TrainableTennisPlayer.Attribute",
            "id": 681,
            "members": [
              {
                "id": 677,
                "name": "agility",
                "nodeType": "EnumValue",
                "src": "479:7:5"
              },
              {
                "id": 678,
                "name": "power",
                "nodeType": "EnumValue",
                "src": "488:5:5"
              },
              {
                "id": 679,
                "name": "stamina",
                "nodeType": "EnumValue",
                "src": "495:7:5"
              },
              {
                "id": 680,
                "name": "technique",
                "nodeType": "EnumValue",
                "src": "504:9:5"
              }
            ],
            "name": "Attribute",
            "nodeType": "EnumDefinition",
            "src": "462:53:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 687,
            "name": "Train",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 683,
                  "indexed": true,
                  "name": "playerId",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "533:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 685,
                  "indexed": false,
                  "name": "attribute",
                  "nodeType": "VariableDeclaration",
                  "scope": 687,
                  "src": "556:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Attribute_$681",
                    "typeString": "enum TrainableTennisPlayer.Attribute"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 684,
                    "name": "Attribute",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 681,
                    "src": "556:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Attribute_$681",
                      "typeString": "enum TrainableTennisPlayer.Attribute"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "532:44:5"
            },
            "src": "521:56:5"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 691,
            "name": "Rest",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 689,
                  "indexed": true,
                  "name": "playerId",
                  "nodeType": "VariableDeclaration",
                  "scope": 691,
                  "src": "593:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 688,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "593:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "592:23:5"
            },
            "src": "582:34:5"
          },
          {
            "body": {
              "id": 815,
              "nodeType": "Block",
              "src": "717:1042:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 704,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 700,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "793:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 699,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1410
                            ],
                            "referencedDeclaration": 1410,
                            "src": "785:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "785:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 702,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2294,
                            "src": "801:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "801:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "785:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206265206f776e6572206f6620706c6179657220746f20747261696e",
                        "id": 705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "813:34:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2812d4bf2531b656805c72a09b1e32ae1d4cf0bc06dc1bd2355053982e8405d4",
                          "typeString": "literal_string \"Must be owner of player to train\""
                        },
                        "value": "Must be owner of player to train"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2812d4bf2531b656805c72a09b1e32ae1d4cf0bc06dc1bd2355053982e8405d4",
                          "typeString": "literal_string \"Must be owner of player to train\""
                        }
                      ],
                      "id": 698,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2297,
                        2298
                      ],
                      "referencedDeclaration": 2298,
                      "src": "777:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "777:71:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 707,
                  "nodeType": "ExpressionStatement",
                  "src": "777:71:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 708,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 540,
                          "src": "909:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                            "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                          }
                        },
                        "id": 710,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 709,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "917:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "909:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$537_storage",
                          "typeString": "struct TennisPlayerBase.Player storage ref"
                        }
                      },
                      "id": 711,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "condition",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 528,
                      "src": "909:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 713,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 540,
                              "src": "948:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                              }
                            },
                            "id": 715,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 714,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "956:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "948:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$537_storage",
                              "typeString": "struct TennisPlayerBase.Player storage ref"
                            }
                          },
                          "id": 716,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "condition",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 528,
                          "src": "948:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 717,
                          "name": "conditionCostToTrain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 664,
                          "src": "972:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 712,
                        "name": "castSubtract8",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 638,
                        "src": "934:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$returns$_t_uint8_$",
                          "typeString": "function (uint8,uint8) pure returns (uint8)"
                        }
                      },
                      "id": 718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "934:59:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "909:84:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 720,
                  "nodeType": "ExpressionStatement",
                  "src": "909:84:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 721,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 540,
                          "src": "1034:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                            "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                          }
                        },
                        "id": 723,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 722,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "1042:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1034:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$537_storage",
                          "typeString": "struct TennisPlayerBase.Player storage ref"
                        }
                      },
                      "id": 724,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "xp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 520,
                      "src": "1034:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 726,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 540,
                              "src": "1068:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                              }
                            },
                            "id": 728,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 727,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "1076:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1068:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$537_storage",
                              "typeString": "struct TennisPlayerBase.Player storage ref"
                            }
                          },
                          "id": 729,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 520,
                          "src": "1068:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 730,
                          "name": "xpCostToTrain",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "1085:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 725,
                        "name": "castSubtract256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 655,
                        "src": "1052:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint8) pure returns (uint256)"
                        }
                      },
                      "id": 731,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1052:47:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1034:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:65:5"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_Attribute_$681",
                      "typeString": "enum TrainableTennisPlayer.Attribute"
                    },
                    "id": 737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 734,
                      "name": "_attr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 695,
                      "src": "1155:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Attribute_$681",
                        "typeString": "enum TrainableTennisPlayer.Attribute"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 735,
                        "name": "Attribute",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "1164:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Attribute_$681_$",
                          "typeString": "type(enum TrainableTennisPlayer.Attribute)"
                        }
                      },
                      "id": 736,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "agility",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1164:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Attribute_$681",
                        "typeString": "enum TrainableTennisPlayer.Attribute"
                      }
                    },
                    "src": "1155:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_Attribute_$681",
                        "typeString": "enum TrainableTennisPlayer.Attribute"
                      },
                      "id": 755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 752,
                        "name": "_attr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "1301:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Attribute_$681",
                          "typeString": "enum TrainableTennisPlayer.Attribute"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 753,
                          "name": "Attribute",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 681,
                          "src": "1310:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Attribute_$681_$",
                            "typeString": "type(enum TrainableTennisPlayer.Attribute)"
                          }
                        },
                        "id": 754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "power",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1310:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Attribute_$681",
                          "typeString": "enum TrainableTennisPlayer.Attribute"
                        }
                      },
                      "src": "1301:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Attribute_$681",
                          "typeString": "enum TrainableTennisPlayer.Attribute"
                        },
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 770,
                          "name": "_attr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 695,
                          "src": "1441:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Attribute_$681",
                            "typeString": "enum TrainableTennisPlayer.Attribute"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 771,
                            "name": "Attribute",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 681,
                            "src": "1450:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Attribute_$681_$",
                              "typeString": "type(enum TrainableTennisPlayer.Attribute)"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "stamina",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1450:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Attribute_$681",
                            "typeString": "enum TrainableTennisPlayer.Attribute"
                          }
                        },
                        "src": "1441:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_Attribute_$681",
                            "typeString": "enum TrainableTennisPlayer.Attribute"
                          },
                          "id": 791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 788,
                            "name": "_attr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 695,
                            "src": "1587:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Attribute_$681",
                              "typeString": "enum TrainableTennisPlayer.Attribute"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 789,
                              "name": "Attribute",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 681,
                              "src": "1596:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Attribute_$681_$",
                                "typeString": "type(enum TrainableTennisPlayer.Attribute)"
                              }
                            },
                            "id": 790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "technique",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1596:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Attribute_$681",
                              "typeString": "enum TrainableTennisPlayer.Attribute"
                            }
                          },
                          "src": "1587:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 806,
                        "nodeType": "IfStatement",
                        "src": "1583:138:5",
                        "trueBody": {
                          "id": 805,
                          "nodeType": "Block",
                          "src": "1617:104:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 803,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 792,
                                      "name": "players",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 540,
                                      "src": "1631:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                        "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                      }
                                    },
                                    "id": 794,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 793,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 693,
                                      "src": "1639:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1631:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Player_$537_storage",
                                      "typeString": "struct TennisPlayerBase.Player storage ref"
                                    }
                                  },
                                  "id": 795,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "technique",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 536,
                                  "src": "1631:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 797,
                                          "name": "players",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 540,
                                          "src": "1665:7:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                            "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                          }
                                        },
                                        "id": 799,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 798,
                                          "name": "_id",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 693,
                                          "src": "1673:3:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1665:12:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Player_$537_storage",
                                          "typeString": "struct TennisPlayerBase.Player storage ref"
                                        }
                                      },
                                      "id": 800,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "technique",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 536,
                                      "src": "1665:22:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    {
                                      "argumentTypes": null,
                                      "id": 801,
                                      "name": "attributeGainOnTrain",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 670,
                                      "src": "1689:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "id": 796,
                                    "name": "castAdd8",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 617,
                                    "src": "1656:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$returns$_t_uint8_$",
                                      "typeString": "function (uint8,uint8) pure returns (uint8)"
                                    }
                                  },
                                  "id": 802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1656:54:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1631:79:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "id": 804,
                              "nodeType": "ExpressionStatement",
                              "src": "1631:79:5"
                            }
                          ]
                        }
                      },
                      "id": 807,
                      "nodeType": "IfStatement",
                      "src": "1437:284:5",
                      "trueBody": {
                        "id": 787,
                        "nodeType": "Block",
                        "src": "1469:100:5",
                        "statements": [
                          {
                            "expression": {
                              "argumentTypes": null,
                              "id": 785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 774,
                                    "name": "players",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 540,
                                    "src": "1483:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                      "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                    }
                                  },
                                  "id": 776,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 775,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "1491:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1483:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Player_$537_storage",
                                    "typeString": "struct TennisPlayerBase.Player storage ref"
                                  }
                                },
                                "id": 777,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "stamina",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 534,
                                "src": "1483:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 779,
                                        "name": "players",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 540,
                                        "src": "1515:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                          "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                        }
                                      },
                                      "id": 781,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 780,
                                        "name": "_id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 693,
                                        "src": "1523:3:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "1515:12:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Player_$537_storage",
                                        "typeString": "struct TennisPlayerBase.Player storage ref"
                                      }
                                    },
                                    "id": 782,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "stamina",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 534,
                                    "src": "1515:20:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 783,
                                    "name": "attributeGainOnTrain",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 670,
                                    "src": "1537:20:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  ],
                                  "id": 778,
                                  "name": "castAdd8",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 617,
                                  "src": "1506:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$returns$_t_uint8_$",
                                    "typeString": "function (uint8,uint8) pure returns (uint8)"
                                  }
                                },
                                "id": 784,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1506:52:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "1483:75:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "id": 786,
                            "nodeType": "ExpressionStatement",
                            "src": "1483:75:5"
                          }
                        ]
                      }
                    },
                    "id": 808,
                    "nodeType": "IfStatement",
                    "src": "1297:424:5",
                    "trueBody": {
                      "id": 769,
                      "nodeType": "Block",
                      "src": "1327:96:5",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 756,
                                  "name": "players",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 540,
                                  "src": "1341:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                    "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                  }
                                },
                                "id": 758,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 757,
                                  "name": "_id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 693,
                                  "src": "1349:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1341:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Player_$537_storage",
                                  "typeString": "struct TennisPlayerBase.Player storage ref"
                                }
                              },
                              "id": 759,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "memberName": "power",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 532,
                              "src": "1341:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 761,
                                      "name": "players",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 540,
                                      "src": "1371:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                        "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                      }
                                    },
                                    "id": 763,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 762,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 693,
                                      "src": "1379:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1371:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Player_$537_storage",
                                      "typeString": "struct TennisPlayerBase.Player storage ref"
                                    }
                                  },
                                  "id": 764,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "power",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 532,
                                  "src": "1371:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 765,
                                  "name": "attributeGainOnTrain",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 670,
                                  "src": "1391:20:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 760,
                                "name": "castAdd8",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 617,
                                "src": "1362:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$returns$_t_uint8_$",
                                  "typeString": "function (uint8,uint8) pure returns (uint8)"
                                }
                              },
                              "id": 766,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1362:50:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "1341:71:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 768,
                          "nodeType": "ExpressionStatement",
                          "src": "1341:71:5"
                        }
                      ]
                    }
                  },
                  "id": 809,
                  "nodeType": "IfStatement",
                  "src": "1151:570:5",
                  "trueBody": {
                    "id": 751,
                    "nodeType": "Block",
                    "src": "1183:100:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 738,
                                "name": "players",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 540,
                                "src": "1197:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                  "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                }
                              },
                              "id": 740,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 739,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 693,
                                "src": "1205:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1197:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$537_storage",
                                "typeString": "struct TennisPlayerBase.Player storage ref"
                              }
                            },
                            "id": 741,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "agility",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 530,
                            "src": "1197:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 743,
                                    "name": "players",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 540,
                                    "src": "1229:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                      "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                                    }
                                  },
                                  "id": 745,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 744,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 693,
                                    "src": "1237:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "1229:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Player_$537_storage",
                                    "typeString": "struct TennisPlayerBase.Player storage ref"
                                  }
                                },
                                "id": 746,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "agility",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 530,
                                "src": "1229:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 747,
                                "name": "attributeGainOnTrain",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 670,
                                "src": "1251:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 742,
                              "name": "castAdd8",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 617,
                              "src": "1220:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$returns$_t_uint8_$",
                                "typeString": "function (uint8,uint8) pure returns (uint8)"
                              }
                            },
                            "id": 748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1220:52:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1197:75:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 750,
                        "nodeType": "ExpressionStatement",
                        "src": "1197:75:5"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 811,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "1741:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 812,
                        "name": "_attr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 695,
                        "src": "1746:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Attribute_$681",
                          "typeString": "enum TrainableTennisPlayer.Attribute"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_enum$_Attribute_$681",
                          "typeString": "enum TrainableTennisPlayer.Attribute"
                        }
                      ],
                      "id": 810,
                      "name": "Train",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 687,
                      "src": "1735:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_Attribute_$681_$returns$__$",
                        "typeString": "function (uint256,enum TrainableTennisPlayer.Attribute)"
                      }
                    },
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1735:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 814,
                  "nodeType": "EmitStatement",
                  "src": "1730:22:5"
                }
              ]
            },
            "documentation": null,
            "id": 816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "train",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 693,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "683:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 692,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "683:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 695,
                  "name": "_attr",
                  "nodeType": "VariableDeclaration",
                  "scope": 816,
                  "src": "693:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Attribute_$681",
                    "typeString": "enum TrainableTennisPlayer.Attribute"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 694,
                    "name": "Attribute",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 681,
                    "src": "693:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Attribute_$681",
                      "typeString": "enum TrainableTennisPlayer.Attribute"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "682:27:5"
            },
            "returnParameters": {
              "id": 697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "717:0:5"
            },
            "scope": 863,
            "src": "668:1091:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 861,
              "nodeType": "Block",
              "src": "1837:354:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 823,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 818,
                              "src": "1912:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 822,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1410
                            ],
                            "referencedDeclaration": 1410,
                            "src": "1904:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1904:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 825,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2294,
                            "src": "1920:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1920:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1904:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d757374206265206f776e6572206f6620706c6179657220746f2072657374",
                        "id": 828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1932:33:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e35a356590130031d2a147b591cb6f0df5fcb018aa141588840c90b9081b0ae0",
                          "typeString": "literal_string \"Must be owner of player to rest\""
                        },
                        "value": "Must be owner of player to rest"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e35a356590130031d2a147b591cb6f0df5fcb018aa141588840c90b9081b0ae0",
                          "typeString": "literal_string \"Must be owner of player to rest\""
                        }
                      ],
                      "id": 821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2297,
                        2298
                      ],
                      "referencedDeclaration": 2298,
                      "src": "1896:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:70:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 830,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:70:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 831,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 540,
                          "src": "2008:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                            "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                          }
                        },
                        "id": 833,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 832,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 818,
                          "src": "2016:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2008:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$537_storage",
                          "typeString": "struct TennisPlayerBase.Player storage ref"
                        }
                      },
                      "id": 834,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "xp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 520,
                      "src": "2008:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 836,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 540,
                              "src": "2042:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                              }
                            },
                            "id": 838,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 837,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 818,
                              "src": "2050:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2042:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$537_storage",
                              "typeString": "struct TennisPlayerBase.Player storage ref"
                            }
                          },
                          "id": 839,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "xp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 520,
                          "src": "2042:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 840,
                          "name": "xpCostToRest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 673,
                          "src": "2059:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 835,
                        "name": "castSubtract256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 655,
                        "src": "2026:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint8_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint8) pure returns (uint256)"
                        }
                      },
                      "id": 841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2026:46:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2008:64:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 843,
                  "nodeType": "ExpressionStatement",
                  "src": "2008:64:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 844,
                          "name": "players",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 540,
                          "src": "2082:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                            "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                          }
                        },
                        "id": 846,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 845,
                          "name": "_id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 818,
                          "src": "2090:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2082:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$537_storage",
                          "typeString": "struct TennisPlayerBase.Player storage ref"
                        }
                      },
                      "id": 847,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "condition",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 528,
                      "src": "2082:22:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 849,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 540,
                              "src": "2116:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Player_$537_storage_$dyn_storage",
                                "typeString": "struct TennisPlayerBase.Player storage ref[] storage ref"
                              }
                            },
                            "id": 851,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 850,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 818,
                              "src": "2124:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2116:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$537_storage",
                              "typeString": "struct TennisPlayerBase.Player storage ref"
                            }
                          },
                          "id": 852,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "condition",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 528,
                          "src": "2116:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 853,
                          "name": "conditionGainOnRest",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 676,
                          "src": "2140:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "id": 848,
                        "name": "castAdd8",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "2107:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$returns$_t_uint8_$",
                          "typeString": "function (uint8,uint8) pure returns (uint8)"
                        }
                      },
                      "id": 854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2107:53:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2082:78:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "2082:78:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 858,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "2180:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 857,
                      "name": "Rest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 691,
                      "src": "2175:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2175:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 860,
                  "nodeType": "EmitStatement",
                  "src": "2170:14:5"
                }
              ]
            },
            "documentation": null,
            "id": 862,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "rest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 818,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 862,
                  "src": "1820:8:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 817,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1820:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1819:10:5"
            },
            "returnParameters": {
              "id": 820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1837:0:5"
            },
            "scope": 863,
            "src": "1806:385:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 864,
        "src": "80:2113:5"
      }
    ],
    "src": "21:2172:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.5+commit.47a71e8f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-01T10:13:55.006Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}